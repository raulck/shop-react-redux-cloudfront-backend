{
  "version": 3,
  "sources": ["../../lib/lambda/getProductById/index.ts", "../../lib/lambda/mocks/mock-products.ts"],
  "sourcesContent": ["import { APIGatewayProxyEvent, APIGatewayProxyResult } from \"aws-lambda\";\r\nimport { mockProducts } from \"../mocks/mock-products\";\r\n\r\nexport const handler = async (\r\n  event: APIGatewayProxyEvent\r\n): Promise<APIGatewayProxyResult> => {\r\n  try {\r\n    const productId = event.pathParameters?.productId;\r\n\r\n    if (!productId) {\r\n      return {\r\n        statusCode: 400,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify({ message: \"Missing path parameter: productId\" }),\r\n      };\r\n    }\r\n\r\n    const product = mockProducts.find((product) => product.id === productId);\r\n\r\n    if (!product) {\r\n      return {\r\n        statusCode: 404,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Access-Control-Allow-Origin\": \"*\",\r\n        },\r\n        body: JSON.stringify({ message: `Product not found: ${productId}` }),\r\n      };\r\n    }\r\n\r\n    return {\r\n      statusCode: 200,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\", // Allow all origins\r\n        \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\", // Allowed HTTP methods\r\n        \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\", // Allowed headers\r\n      },\r\n      body: JSON.stringify(product),\r\n    };\r\n  } catch (err) {\r\n    console.error(\"Error in getProductById:\", err);\r\n    return {\r\n      statusCode: 500,\r\n      headers: { \"Access-Control-Allow-Origin\": \"*\" },\r\n      body: JSON.stringify({ message: \"Internal Server Error\" }),\r\n    };\r\n  }\r\n};\r\n", "export const mockProducts = [\r\n  {\r\n    id: \"1\",\r\n    title: \"Porsche 911\",\r\n    price: 99999,\r\n    description:\r\n      \"A legendary sports car with iconic design and exhilarating performance.\",\r\n  },\r\n\r\n  {\r\n    id: \"2\",\r\n    title: \"Ford Mustang\",\r\n    price: 55999,\r\n    description:\r\n      \"An iconic American muscle car with powerful performance and a sleek design.\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    title: \"Chevrolet Camaro\",\r\n    price: 42999,\r\n    description:\r\n      \"A sporty coupe with bold styling and thrilling driving dynamics.\",\r\n  },\r\n  {\r\n    id: \"4\",\r\n    title: \"Toyota Corolla\",\r\n    price: 19999,\r\n    description:\r\n      \"A reliable and fuel-efficient compact car, perfect for daily commuting.\",\r\n  },\r\n  {\r\n    id: \"5\",\r\n    title: \"Honda Civic\",\r\n    price: 22999,\r\n    description:\r\n      \"A popular compact car known for its reliability, efficiency, and modern features.\",\r\n  },\r\n  {\r\n    id: \"6\",\r\n    title: \"BMW 3 Series\",\r\n    price: 45999,\r\n    description:\r\n      \"A premium sports sedan offering a perfect balance of luxury and performance.\",\r\n  },\r\n  {\r\n    id: \"7\",\r\n    title: \"Audi Q5\",\r\n    price: 52999,\r\n    description:\r\n      \"A luxury compact SUV with advanced technology and a comfortable interior.\",\r\n  },\r\n  {\r\n    id: \"8\",\r\n    title: \"Mercedes-Benz C-Class\",\r\n    price: 49999,\r\n    description:\r\n      \"A sophisticated luxury sedan with elegant styling and cutting-edge features.\",\r\n  },\r\n  {\r\n    id: \"9\",\r\n    title: \"Jeep Wrangler\",\r\n    price: 38999,\r\n    description:\r\n      \"A rugged off-road SUV designed for adventure and capable of tackling any terrain.\",\r\n  },\r\n  {\r\n    id: \"10\",\r\n    title: \"Tesla Model S\",\r\n    price: 79999,\r\n    description:\r\n      \"A luxury electric sedan with cutting-edge technology and impressive range.\",\r\n  },\r\n];\r\n\r\n// [\r\n//   { id: \"1\", name: \"Product 1\", price: 100 },\r\n//   { id: \"2\", name: \"Product 2\", price: 200 },\r\n//   { id: \"3\", name: \"Product 3\", price: 300 },\r\n// ];\r\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GCAO,IAAMI,EAAe,CAC1B,CACE,GAAI,IACJ,MAAO,cACP,MAAO,MACP,YACE,yEACJ,EAEA,CACE,GAAI,IACJ,MAAO,eACP,MAAO,MACP,YACE,6EACJ,EACA,CACE,GAAI,IACJ,MAAO,mBACP,MAAO,MACP,YACE,kEACJ,EACA,CACE,GAAI,IACJ,MAAO,iBACP,MAAO,MACP,YACE,yEACJ,EACA,CACE,GAAI,IACJ,MAAO,cACP,MAAO,MACP,YACE,mFACJ,EACA,CACE,GAAI,IACJ,MAAO,eACP,MAAO,MACP,YACE,8EACJ,EACA,CACE,GAAI,IACJ,MAAO,UACP,MAAO,MACP,YACE,2EACJ,EACA,CACE,GAAI,IACJ,MAAO,wBACP,MAAO,MACP,YACE,8EACJ,EACA,CACE,GAAI,IACJ,MAAO,gBACP,MAAO,MACP,YACE,mFACJ,EACA,CACE,GAAI,KACJ,MAAO,gBACP,MAAO,MACP,YACE,4EACJ,CACF,EDrEO,IAAMC,EAAU,MACrBC,GACmC,CACnC,GAAI,CACF,IAAMC,EAAYD,EAAM,gBAAgB,UAExC,GAAI,CAACC,EACH,MAAO,CACL,WAAY,IACZ,QAAS,CACP,eAAgB,mBAChB,8BAA+B,GACjC,EACA,KAAM,KAAK,UAAU,CAAE,QAAS,mCAAoC,CAAC,CACvE,EAGF,IAAMC,EAAUC,EAAa,KAAMD,GAAYA,EAAQ,KAAOD,CAAS,EAEvE,OAAKC,EAWE,CACL,WAAY,IACZ,QAAS,CACP,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,qBAChC,+BAAgC,6BAClC,EACA,KAAM,KAAK,UAAUA,CAAO,CAC9B,EAnBS,CACL,WAAY,IACZ,QAAS,CACP,eAAgB,mBAChB,8BAA+B,GACjC,EACA,KAAM,KAAK,UAAU,CAAE,QAAS,sBAAsBD,CAAS,EAAG,CAAC,CACrE,CAaJ,OAASG,EAAK,CACZ,eAAQ,MAAM,2BAA4BA,CAAG,EACtC,CACL,WAAY,IACZ,QAAS,CAAE,8BAA+B,GAAI,EAC9C,KAAM,KAAK,UAAU,CAAE,QAAS,uBAAwB,CAAC,CAC3D,CACF,CACF",
  "names": ["index_exports", "__export", "handler", "__toCommonJS", "mockProducts", "handler", "event", "productId", "product", "mockProducts", "err"]
}
