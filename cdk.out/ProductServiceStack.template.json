{
 "Resources": {
  "GetProductsListLambdaServiceRole07D1CCC1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductsListLambda/ServiceRole/Resource"
   }
  },
  "GetProductsListLambdaC5169546": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "95146366c879805292bf10c01fbf235e06938221eeb2cf9eb0469c8ec731cce1.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "GetProductsListLambdaServiceRole07D1CCC1",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "GetProductsListLambdaServiceRole07D1CCC1"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductsListLambda/Resource",
    "aws:asset:path": "asset.95146366c879805292bf10c01fbf235e06938221eeb2cf9eb0469c8ec731cce1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetProductsListLambdaLogGroup4523949D": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetProductsListLambdaC5169546"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductsListLambda/LogGroup/Resource"
   }
  },
  "GetProductByIdLambdaServiceRoleE1FC5E1E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductByIdLambda/ServiceRole/Resource"
   }
  },
  "GetProductByIdLambda4D2EE684": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "533dfe3ca2fb8fe1b1c9580d03c44c93c7ba2f98edf3fdbb7e9b88c05b97375f.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "GetProductByIdLambdaServiceRoleE1FC5E1E",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "GetProductByIdLambdaServiceRoleE1FC5E1E"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductByIdLambda/Resource",
    "aws:asset:path": "asset.533dfe3ca2fb8fe1b1c9580d03c44c93c7ba2f98edf3fdbb7e9b88c05b97375f",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetProductByIdLambdaLogGroup47BC6771": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetProductByIdLambda4D2EE684"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetProductByIdLambda/LogGroup/Resource"
   }
  },
  "GetOpenApiJsonLambdaServiceRole49288819": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetOpenApiJsonLambda/ServiceRole/Resource"
   }
  },
  "GetOpenApiJsonLambda9DED8EF9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ae4df373ebf8ae8e7193667337e72193b8d9126bc773b387bcf020e1001b19e1.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "GetOpenApiJsonLambdaServiceRole49288819",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "GetOpenApiJsonLambdaServiceRole49288819"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetOpenApiJsonLambda/Resource",
    "aws:asset:path": "asset.ae4df373ebf8ae8e7193667337e72193b8d9126bc773b387bcf020e1001b19e1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetOpenApiJsonLambdaLogGroup484E7E19": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetOpenApiJsonLambda9DED8EF9"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetOpenApiJsonLambda/LogGroup/Resource"
   }
  },
  "GetSwaggerLambdaServiceRole749F0A55": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetSwaggerLambda/ServiceRole/Resource"
   }
  },
  "GetSwaggerLambdaFD75A9B1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c705087b9bbe98c82f94973002558eff993006ca41d2956a6660b02e07c89d13.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "GetSwaggerLambdaServiceRole749F0A55",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x"
   },
   "DependsOn": [
    "GetSwaggerLambdaServiceRole749F0A55"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetSwaggerLambda/Resource",
    "aws:asset:path": "asset.c705087b9bbe98c82f94973002558eff993006ca41d2956a6660b02e07c89d13",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetSwaggerLambdaLogGroup3B567AA4": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetSwaggerLambdaFD75A9B1"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/GetSwaggerLambda/LogGroup/Resource"
   }
  },
  "ProductServiceApiFE734E24": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "This service handles product-related operations.",
    "Name": "Product Service API"
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Resource"
   }
  },
  "ProductServiceApiDeployment696F4D07b2a10b79f1b809c7bb0f9ba87a2a80ff": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "This service handles product-related operations.",
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "DependsOn": [
    "ProductServiceApiopenapijsonGET671F7D3D",
    "ProductServiceApiopenapijsonOPTIONSBE08A145",
    "ProductServiceApiopenapijson8FE6D42B",
    "ProductServiceApiOPTIONS674030A1",
    "ProductServiceApiproductsproductIdGET139D5998",
    "ProductServiceApiproductsproductIdOPTIONS5E5266B3",
    "ProductServiceApiproductsproductId622E148C",
    "ProductServiceApiproductsavailableGET1E93DE8F",
    "ProductServiceApiproductsavailableOPTIONS5EDB0438",
    "ProductServiceApiproductsavailable2B07A1BF",
    "ProductServiceApiproductsGET2C58D7CE",
    "ProductServiceApiproductsOPTIONS099B9D02",
    "ProductServiceApiproducts612C39F6",
    "ProductServiceApiswaggerGET6F7B98B7",
    "ProductServiceApiswaggerOPTIONS734139E2",
    "ProductServiceApiswagger98F752F6"
   ],
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "ProductServiceApiDeploymentStagedev15C053CF": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ProductServiceApiDeployment696F4D07b2a10b79f1b809c7bb0f9ba87a2a80ff"
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    },
    "StageName": "dev"
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/DeploymentStage.dev/Resource"
   }
  },
  "ProductServiceApiOPTIONS674030A1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "ProductServiceApiFE734E24",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/OPTIONS/Resource"
   }
  },
  "ProductServiceApiproducts612C39F6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ProductServiceApiFE734E24",
      "RootResourceId"
     ]
    },
    "PathPart": "products",
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/Resource"
   }
  },
  "ProductServiceApiproductsOPTIONS099B9D02": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ProductServiceApiproducts612C39F6"
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/OPTIONS/Resource"
   }
  },
  "ProductServiceApiproductsGETApiPermissionProductServiceStackProductServiceApiF6E5F4DAGETproducts2CAD3151": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductsListLambdaC5169546",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductServiceApiFE734E24"
       },
       "/",
       {
        "Ref": "ProductServiceApiDeploymentStagedev15C053CF"
       },
       "/GET/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/GET/ApiPermission.ProductServiceStackProductServiceApiF6E5F4DA.GET..products"
   }
  },
  "ProductServiceApiproductsGETApiPermissionTestProductServiceStackProductServiceApiF6E5F4DAGETproducts60CF323A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductsListLambdaC5169546",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductServiceApiFE734E24"
       },
       "/test-invoke-stage/GET/products"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/GET/ApiPermission.Test.ProductServiceStackProductServiceApiF6E5F4DA.GET..products"
   }
  },
  "ProductServiceApiproductsGET2C58D7CE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetProductsListLambdaC5169546",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "ProductServiceApiproducts612C39F6"
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/GET/Resource"
   }
  },
  "ProductServiceApiproductsavailable2B07A1BF": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ProductServiceApiproducts612C39F6"
    },
    "PathPart": "available",
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/available/Resource"
   }
  },
  "ProductServiceApiproductsavailableOPTIONS5EDB0438": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ProductServiceApiproductsavailable2B07A1BF"
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/available/OPTIONS/Resource"
   }
  },
  "ProductServiceApiproductsavailableGETApiPermissionProductServiceStackProductServiceApiF6E5F4DAGETproductsavailable7D77DBFE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductsListLambdaC5169546",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductServiceApiFE734E24"
       },
       "/",
       {
        "Ref": "ProductServiceApiDeploymentStagedev15C053CF"
       },
       "/GET/products/available"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/available/GET/ApiPermission.ProductServiceStackProductServiceApiF6E5F4DA.GET..products.available"
   }
  },
  "ProductServiceApiproductsavailableGETApiPermissionTestProductServiceStackProductServiceApiF6E5F4DAGETproductsavailable1801BC1E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductsListLambdaC5169546",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductServiceApiFE734E24"
       },
       "/test-invoke-stage/GET/products/available"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/available/GET/ApiPermission.Test.ProductServiceStackProductServiceApiF6E5F4DA.GET..products.available"
   }
  },
  "ProductServiceApiproductsavailableGET1E93DE8F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetProductsListLambdaC5169546",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "ProductServiceApiproductsavailable2B07A1BF"
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/available/GET/Resource"
   }
  },
  "ProductServiceApiproductsproductId622E148C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ProductServiceApiproducts612C39F6"
    },
    "PathPart": "{productId}",
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/{productId}/Resource"
   }
  },
  "ProductServiceApiproductsproductIdOPTIONS5E5266B3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ProductServiceApiproductsproductId622E148C"
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/{productId}/OPTIONS/Resource"
   }
  },
  "ProductServiceApiproductsproductIdGETApiPermissionProductServiceStackProductServiceApiF6E5F4DAGETproductsproductId865B954C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductByIdLambda4D2EE684",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductServiceApiFE734E24"
       },
       "/",
       {
        "Ref": "ProductServiceApiDeploymentStagedev15C053CF"
       },
       "/GET/products/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/{productId}/GET/ApiPermission.ProductServiceStackProductServiceApiF6E5F4DA.GET..products.{productId}"
   }
  },
  "ProductServiceApiproductsproductIdGETApiPermissionTestProductServiceStackProductServiceApiF6E5F4DAGETproductsproductId921695B0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetProductByIdLambda4D2EE684",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductServiceApiFE734E24"
       },
       "/test-invoke-stage/GET/products/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/{productId}/GET/ApiPermission.Test.ProductServiceStackProductServiceApiF6E5F4DA.GET..products.{productId}"
   }
  },
  "ProductServiceApiproductsproductIdGET139D5998": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetProductByIdLambda4D2EE684",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "StatusCode": "200"
     },
     {
      "StatusCode": "400"
     },
     {
      "StatusCode": "404"
     },
     {
      "StatusCode": "500"
     }
    ],
    "ResourceId": {
     "Ref": "ProductServiceApiproductsproductId622E148C"
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/products/{productId}/GET/Resource"
   }
  },
  "ProductServiceApiopenapijson8FE6D42B": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ProductServiceApiFE734E24",
      "RootResourceId"
     ]
    },
    "PathPart": "openapi.json",
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/openapi.json/Resource"
   }
  },
  "ProductServiceApiopenapijsonOPTIONSBE08A145": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ProductServiceApiopenapijson8FE6D42B"
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/openapi.json/OPTIONS/Resource"
   }
  },
  "ProductServiceApiopenapijsonGETApiPermissionProductServiceStackProductServiceApiF6E5F4DAGETopenapijson40F4259A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetOpenApiJsonLambda9DED8EF9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductServiceApiFE734E24"
       },
       "/",
       {
        "Ref": "ProductServiceApiDeploymentStagedev15C053CF"
       },
       "/GET/openapi.json"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/openapi.json/GET/ApiPermission.ProductServiceStackProductServiceApiF6E5F4DA.GET..openapi.json"
   }
  },
  "ProductServiceApiopenapijsonGETApiPermissionTestProductServiceStackProductServiceApiF6E5F4DAGETopenapijson310C7B73": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetOpenApiJsonLambda9DED8EF9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductServiceApiFE734E24"
       },
       "/test-invoke-stage/GET/openapi.json"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/openapi.json/GET/ApiPermission.Test.ProductServiceStackProductServiceApiF6E5F4DA.GET..openapi.json"
   }
  },
  "ProductServiceApiopenapijsonGET671F7D3D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetOpenApiJsonLambda9DED8EF9",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "ProductServiceApiopenapijson8FE6D42B"
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/openapi.json/GET/Resource"
   }
  },
  "ProductServiceApiswagger98F752F6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ProductServiceApiFE734E24",
      "RootResourceId"
     ]
    },
    "PathPart": "swagger",
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/swagger/Resource"
   }
  },
  "ProductServiceApiswaggerOPTIONS734139E2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ProductServiceApiswagger98F752F6"
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/swagger/OPTIONS/Resource"
   }
  },
  "ProductServiceApiswaggerGETApiPermissionProductServiceStackProductServiceApiF6E5F4DAGETswagger90BCC7EA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetSwaggerLambdaFD75A9B1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductServiceApiFE734E24"
       },
       "/",
       {
        "Ref": "ProductServiceApiDeploymentStagedev15C053CF"
       },
       "/GET/swagger"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/swagger/GET/ApiPermission.ProductServiceStackProductServiceApiF6E5F4DA.GET..swagger"
   }
  },
  "ProductServiceApiswaggerGETApiPermissionTestProductServiceStackProductServiceApiF6E5F4DAGETswagger567CBD40": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetSwaggerLambdaFD75A9B1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ProductServiceApiFE734E24"
       },
       "/test-invoke-stage/GET/swagger"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/swagger/GET/ApiPermission.Test.ProductServiceStackProductServiceApiF6E5F4DA.GET..swagger"
   }
  },
  "ProductServiceApiswaggerGET6F7B98B7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetSwaggerLambdaFD75A9B1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "MethodResponses": [
     {
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "ProductServiceApiswagger98F752F6"
    },
    "RestApiId": {
     "Ref": "ProductServiceApiFE734E24"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/ProductServiceApi/Default/swagger/GET/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/+1Y30/bMBD+W/AjMhmUPfHWFm1Co1AV3qoKHfE1NXVsz+esy6L+75OdHy0TD2NsA215iOx8vrMv9305Oxkkg5OT5PgANnSUivWRkvdJdeMhXXPY0F2lIL8XcKeNwAdKrmLzodCpl0bPK+YK7WWO7IwdMs5Qe1c2/RVoodA1d/eFFkrqjJ1VbGlciucmXaMbdfASFCFnudRyWbIz7wrkjEzhUpyAbQH86tFpUBMjCoUUJ99ylhqBTf9thPRW4uhT06fm30jNgkvIk2pmFM4rBkRFjmJUhrWskzqVFtQwTU2hfRNObRMchrFatc+Wg4YMxdQomcow/7x6hJVD19guwtP3S71kqQUfL3WYYsvp9A6I0FMyDA2n02RUpGv0IyCcL3i90yTVeKnbDSY4T9HlkkgaveXKZJRUlyb76Exh5xVTTfcK8p1eXwLGeNsFthyszMDjBsqkmiH5oZVh06t7nRdnAil10nZZCohVpryOEIUkk4cM91ZnApdQKD82jqYOl0pmK79nD0qZzbWTmdTUEhKgCfqVEbvXIuS3joefxzVz1H5ePRESWNn0HHqQemdOXUZAiFtzaTKZgroQgdpGLz3+5/FI5o4VfhMkE6lsoYa/H7QU/aIxn2FdT+M7xQ7Zgtd6qVUbh9ra7b2txxpAao+Zgz3BmD01Fn5lnPwWiv3+3UXr3ULR/7a0nczByk9YzvBzIR2KbhN42p6zPIY0Q7JGU1NcyIMvaNzuSUG/9fAUHOTo0VFbb5rcTh7N8txJeJ+sv5esn3iG54Ta09fT19P3W+njvwo9m/dXN+2F95aE19eN/4i+eIitLbtT7LxiFtzu3GvBr6bgfFdxXmW0/eaKIW63u2ij7e5a8PihGw7mUmfB6brwtvBbHv6mJg/07stgkJy8T44PHkjKo+Y/SzKr2++t/283mhUAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "ProductServiceStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "ProductServiceApiEndpointE57F6293": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ProductServiceApiFE734E24"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ProductServiceApiDeploymentStagedev15C053CF"
      },
      "/"
     ]
    ]
   }
  },
  "ApiUrl": {
   "Description": "The URL of the Product Service API",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ProductServiceApiFE734E24"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ProductServiceApiDeploymentStagedev15C053CF"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}